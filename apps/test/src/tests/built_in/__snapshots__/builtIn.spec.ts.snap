// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BuiltIn Tests type alias BuiltIn matches snapshot 1`] = `"{"date":"test string data","set":{},"map":{},"array":[],"object":{"constructor":"() => { }","toString":"() => {\\n                return \\"test string data\\";\\n            }","toLocaleString":"() => {\\n                return \\"test string data\\";\\n            }","valueOf":"() => {\\n                return {};\\n            }","hasOwnProperty":"(v) => {\\n                return true;\\n            }","isPrototypeOf":"(v) => {\\n                return true;\\n            }","propertyIsEnumerable":"(v) => {\\n                return true;\\n            }"},"string":{"0":"test string data","toString":"() => {\\n                return \\"test string data\\";\\n            }","charAt":"(pos) => {\\n                return \\"test string data\\";\\n            }","charCodeAt":"(index) => {\\n                return 10;\\n            }","concat":"(...strings) => {\\n                return \\"test string data\\";\\n            }","indexOf":"(searchString, position) => {\\n                return 10;\\n            }","lastIndexOf":"(searchString, position) => {\\n                return 10;\\n            }","localeCompare":"(that) => {\\n                return 10;\\n            }","match":"(regexp) => {\\n                return \\"any\\";\\n            }","replace":"(searchValue, replaceValue) => {\\n                return \\"test string data\\";\\n            }","search":"(regexp) => {\\n                return 10;\\n            }","slice":"(start, end) => {\\n                return \\"test string data\\";\\n            }","split":"(separator, limit) => {\\n                return [];\\n            }","substring":"(start, end) => {\\n                return \\"test string data\\";\\n            }","toLowerCase":"() => {\\n                return \\"test string data\\";\\n            }","toLocaleLowerCase":"(locales) => {\\n                return \\"test string data\\";\\n            }","toUpperCase":"() => {\\n                return \\"test string data\\";\\n            }","toLocaleUpperCase":"(locales) => {\\n                return \\"test string data\\";\\n            }","trim":"() => {\\n                return \\"test string data\\";\\n            }","length":10,"substr":"(from, length) => {\\n                return \\"test string data\\";\\n            }","valueOf":"() => {\\n                return \\"test string data\\";\\n            }"},"number":{"toString":"(radix) => {\\n                return \\"test string data\\";\\n            }","toFixed":"(fractionDigits) => {\\n                return \\"test string data\\";\\n            }","toExponential":"(fractionDigits) => {\\n                return \\"test string data\\";\\n            }","toPrecision":"(precision) => {\\n                return \\"test string data\\";\\n            }","valueOf":"() => {\\n                return 10;\\n            }","toLocaleString":"(locales, options) => {\\n                return \\"test string data\\";\\n            }"},"boolean":{"valueOf":"() => {\\n                return true;\\n            }"},"symbol":{"toString":"() => {\\n                return \\"test string data\\";\\n            }","valueOf":"() => {\\n                return Symbol();\\n            }"},"function":"() => { }"}"`;
